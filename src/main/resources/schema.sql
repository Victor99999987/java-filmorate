DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS films_genres CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS reviews_likes CASCADE;

CREATE TABLE IF NOT EXISTS mpa
(
    id   integer generated by default as identity PRIMARY KEY,
    name varchar(255) not null
);

CREATE TABLE IF NOT EXISTS genres
(
    id   integer generated by default as identity PRIMARY KEY,
    name varchar(255) not null
);

CREATE TABLE IF NOT EXISTS users
(
    id       integer generated by default as identity PRIMARY KEY,
    login    varchar(255) not null,
    email    varchar(255) not null,
    name     varchar(255) not null,
    birthday date         not null
);

CREATE TABLE IF NOT EXISTS films
(
    id          integer generated by default as identity PRIMARY KEY,
    name        varchar(255) not null,
    description varchar(255) not null,
    releaseDate date         not null,
    duration    integer      not null,
    mpa_id      integer      not null REFERENCES mpa (id)
);

CREATE TABLE IF NOT EXISTS likes
(
    users_id integer not null REFERENCES users (id) on delete cascade,
    films_id integer not null REFERENCES films (id) on delete cascade
);

CREATE TABLE IF NOT EXISTS films_genres
(
    films_id  integer not null REFERENCES films (id) on delete cascade,
    genres_id integer not null REFERENCES genres (id) on delete cascade
);

CREATE TABLE IF NOT EXISTS friendship
(
    users_id   integer not null REFERENCES users (id) on delete cascade,
    friends_id integer not null REFERENCES users (id) on delete cascade,
    confirmed  boolean not null
);

CREATE TABLE IF NOT EXISTS REVIEWS
(
    REVIEW_ID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID     INTEGER       NOT NULL,
    USER_ID     INTEGER       NOT NULL,
    CONTENT     VARCHAR(1024) NOT NULL,
    IS_POSITIVE BOOLEAN       NOT NULL,
    USEFUL      INTEGER       NOT NULL DEFAULT 0,
    CONSTRAINT REVIEW_PK PRIMARY KEY (REVIEW_ID),
    CONSTRAINT FK_REVIEWS_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_REVIEWS_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEWS_LIKES
(
    REVIEW_ID INTEGER,
    USER_ID   INTEGER,
    IS_LIKE   BOOLEAN NOT NULL,
    CONSTRAINT PK_REVIEWS_LIKE PRIMARY KEY (REVIEW_ID, USER_ID),
    CONSTRAINT FK_REVIEWS_LIKE_REVIEWS_ID FOREIGN KEY (REVIEW_ID) REFERENCES REVIEWS (REVIEW_ID) ON DELETE CASCADE,
    CONSTRAINT FK_REVIEWS_LIKE_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
);

CREATE UNIQUE INDEX IF NOT EXISTS REVIEWS_ID_INDEX ON REVIEWS (REVIEW_ID);